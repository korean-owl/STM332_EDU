/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
    updateItemCallback(this, &MainViewBase::updateItemCallbackHandler),
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    swipeContainer1.setXY(0, 0);
    swipeContainer1.setSwipeCutoff(50);
    swipeContainer1.setEndSwipeElasticWidth(50);

    swipeContainer1Page1.setWidth(480);
    swipeContainer1Page1.setHeight(272);
    BackGround.setXY(0, 0);
    BackGround.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
    swipeContainer1Page1.add(BackGround);

    ButtonDown.setXY(175, 216);
    ButtonDown.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_DOWN_RELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTON_DOWN_PRESSED_ID));
    ButtonDown.setAction(buttonCallback);
    swipeContainer1Page1.add(ButtonDown);

    ButtonUp.setXY(175, 0);
    ButtonUp.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_UP_RELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTON_UP_PRESSED_ID));
    ButtonUp.setAction(buttonCallback);
    swipeContainer1Page1.add(ButtonUp);

    TextBackGround.setXY(164, 59);
    TextBackGround.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
    swipeContainer1Page1.add(TextBackGround);

    TextCounter.setPosition(164, 91, 152, 90);
    TextCounter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TextCounter.setLinespacing(0);
    Unicode::snprintf(TextCounterBuffer, TEXTCOUNTER_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_C1CY).getText());
    TextCounter.setWildcard(TextCounterBuffer);
    TextCounter.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KDAG));
    swipeContainer1Page1.add(TextCounter);

    swipeContainer1.add(swipeContainer1Page1);

    swipeContainer1Page2.setWidth(480);
    swipeContainer1Page2.setHeight(272);
    BackGround2.setXY(0, 0);
    BackGround2.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
    swipeContainer1Page2.add(BackGround2);

    scrollWheel1.setPosition(0, 41, 480, 191);
    scrollWheel1.setHorizontal(false);
    scrollWheel1.setCircular(true);
    scrollWheel1.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    scrollWheel1.setSwipeAcceleration(10);
    scrollWheel1.setDragAcceleration(10);
    scrollWheel1.setNumberOfItems(6);
    scrollWheel1.setSelectedItemOffset(60);
    scrollWheel1.setOvershootPercentage(0);
    scrollWheel1.setDrawableSize(70, 0);
    scrollWheel1.setDrawables(scrollWheel1ListItems, updateItemCallback);
    scrollWheel1.animateToItem(0, 0);
    swipeContainer1Page2.add(scrollWheel1);

    overlay.setXY(0, 0);
    overlay.setBitmap(touchgfx::Bitmap(BITMAP_OVERLAY_ID));
    swipeContainer1Page2.add(overlay);

    swipeContainer1.add(swipeContainer1Page2);

    swipeContainer1.setSelectedPage(1);
    add(swipeContainer1);
}

MainViewBase::~MainViewBase()
{

}

void MainViewBase::setupScreen()
{
    scrollWheel1.initialize();
    for (int i = 0; i < scrollWheel1ListItems.getNumberOfDrawables(); i++)
    {
        scrollWheel1ListItems[i].initialize();
    }
}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &ButtonUp)
    {
        //Up_Interaction
        //When ButtonUp clicked call virtual function
        //Call UpButtonHandler
        UpButtonHandler();
    }
    if (&src == &ButtonDown)
    {
        //Down_Interaction
        //When ButtonDown clicked call virtual function
        //Call DownButtonHandler
        DownButtonHandler();
    }
}

void MainViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &scrollWheel1ListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        MenuElement* cc = (MenuElement*)d;
        scrollWheel1UpdateItem(*cc, itemIndex);
    }
}
