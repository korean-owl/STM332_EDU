// 4.23.2 0xd6edb9a0
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_alternate_theme_images_widgets_swipecontainer_medium_off_normal[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID = 0, Size: 20x20 pixels
extern const unsigned char image_alternate_theme_images_widgets_swipecontainer_medium_on_active[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID = 1, Size: 20x20 pixels
extern const unsigned char image_background[]; // BITMAP_BACKGROUND_ID = 2, Size: 480x272 pixels
extern const unsigned char image_button_down_pressed[]; // BITMAP_BUTTON_DOWN_PRESSED_ID = 3, Size: 130x56 pixels
extern const unsigned char image_button_down_released[]; // BITMAP_BUTTON_DOWN_RELEASED_ID = 4, Size: 130x56 pixels
extern const unsigned char image_button_up_pressed[]; // BITMAP_BUTTON_UP_PRESSED_ID = 5, Size: 130x56 pixels
extern const unsigned char image_button_up_released[]; // BITMAP_BUTTON_UP_RELEASED_ID = 6, Size: 130x56 pixels
extern const unsigned char image_counter_box[]; // BITMAP_COUNTER_BOX_ID = 7, Size: 152x154 pixels
extern const unsigned char image_icon00[]; // BITMAP_ICON00_ID = 8, Size: 36x36 pixels
extern const unsigned char image_icon01[]; // BITMAP_ICON01_ID = 9, Size: 36x36 pixels
extern const unsigned char image_icon02[]; // BITMAP_ICON02_ID = 10, Size: 36x36 pixels
extern const unsigned char image_icon03[]; // BITMAP_ICON03_ID = 11, Size: 36x36 pixels
extern const unsigned char image_icon04[]; // BITMAP_ICON04_ID = 12, Size: 36x36 pixels
extern const unsigned char image_icon05[]; // BITMAP_ICON05_ID = 13, Size: 36x36 pixels
extern const unsigned char image_overlay[]; // BITMAP_OVERLAY_ID = 14, Size: 480x272 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_alternate_theme_images_widgets_swipecontainer_medium_off_normal, 0, 20, 20, 17, 6, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 8, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_swipecontainer_medium_on_active, 0, 20, 20, 8, 7, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_background, 0, 480, 272, 0, 0, 480, ((uint8_t)touchgfx::Bitmap::RGB888) >> 3, 272, ((uint8_t)touchgfx::Bitmap::RGB888) & 0x7 },
    { image_button_down_pressed, 0, 130, 56, 3, 0, 124, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 55, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_button_down_released, 0, 130, 56, 3, 0, 124, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 55, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_button_up_pressed, 0, 130, 56, 6, 0, 118, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 56, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_button_up_released, 0, 130, 56, 3, 0, 124, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 55, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_counter_box, 0, 152, 154, 0, 0, 152, ((uint8_t)touchgfx::Bitmap::RGB888) >> 3, 154, ((uint8_t)touchgfx::Bitmap::RGB888) & 0x7 },
    { image_icon00, 0, 36, 36, 6, 5, 24, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 26, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_icon01, 0, 36, 36, 6, 5, 24, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 26, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_icon02, 0, 36, 36, 6, 5, 24, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 26, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_icon03, 0, 36, 36, 6, 5, 24, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 26, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_icon04, 0, 36, 36, 6, 5, 24, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 26, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_icon05, 0, 36, 36, 6, 5, 24, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 26, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_overlay, 0, 480, 272, 408, 0, 72, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 39, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
